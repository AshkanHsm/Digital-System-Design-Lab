;//q1 Student name and ID in 2 lines
;//q2 "Welcome to the Microprocessor lab classes in Isfahan University of Technology"
;#include <HeaderFiles.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;/*
;
;pwm Duty.C:  10     30    50     70    90
;Speed(rpm) :
;Ocr       :  1A     4D   80     B2    E5
;
;*/
;void Q2_Function(int DutyCycle){
; 0001 000D void Q2_Function(int DutyCycle){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000E     if(DutyCycle==10){OCR0=0x1A;}
;PCODE: $0000000F VOL: 0
;	DutyCycle -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 000F     else if(DutyCycle==30){OCR0=0x4D;}
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 0010     else if(DutyCycle==50){OCR0=0x80;}
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0011     else if(DutyCycle==70){OCR0=0xB2;}
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 0012     else if(DutyCycle==90){OCR0=0xE5;}
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0013     else{OCR0=0x00;}
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0014 
; 0001 0015 }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;void Q4_Function(){
; 0001 0017 void Q4_Function(){
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 0018 
; 0001 0019       int ocrValue=255;
; 0001 001A       ocrValue=PINA;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;	ocrValue -> R16,R17
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 001B       OCR0=ocrValue;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0001 001C 
; 0001 001D 
; 0001 001E }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;void Q5_function_TwoPhase()
; 0001 0021 {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0022     PORTB=0x30;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0023     delay_ms(1000);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0024     PORTB=0x60;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0025     delay_ms(1000);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 0026     PORTB=0xc0;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0027     delay_ms(1000);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0028     PORTB=0x90;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 0029     delay_ms(1000);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 002A 
; 0001 002B 
; 0001 002C }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;
;void TurnOFF_AllTimers(){
; 0001 002E void TurnOFF_AllTimers(){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 002F 
; 0001 0030     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0031 
; 0001 0032     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0033     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 0034 
; 0001 0035 
; 0001 0036     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 0037 
; 0001 0038 
; 0001 0039 }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;void turnOn_SelectedTimer(int SelectTimer)
; 0001 003B {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0001 003C 
; 0001 003D 
; 0001 003E     if(SelectTimer==0){
;PCODE: $0000006D VOL: 0
;	SelectTimer -> Y+0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0001 003F      TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 0040     }
; 0001 0041     else if(SelectTimer==1){
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 0042 
; 0001 0043            // TCCR1B =  (0<<CS12)| (1<<CS11)| (0<<CS10);  //1Mhz  -> Period = 1.024 ms
; 0001 0044 
; 0001 0045     }
; 0001 0046     else if(SelectTimer==2){
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0001 0047          TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (0<<CS20);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0001 0048     }
; 0001 0049 }
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
