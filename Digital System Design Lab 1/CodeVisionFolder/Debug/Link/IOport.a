;
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;void Start();
;void BlinkLED_Q1();
;void LedLightDance_Q2();
;void SwitchToLed_Q3();
;void UpDownCount_Q4();
;void SevenSegDecrease_Q5();
;void SevenSegShowNumber(char SegmentNumber,int dot);
;void SevenSegZeroButton_Q6();
;
;//Main---------------------------------------------------
;void main(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0012     Start();
;PCODE: $0000000E VOL: 0
; 0000 0013    BlinkLED_Q1();
;PCODE: $0000000F VOL: 0
; 0000 0014    LedLightDance_Q2();
;PCODE: $00000010 VOL: 0
; 0000 0015     UpDownCount_Q4()  ;
;PCODE: $00000011 VOL: 0
; 0000 0016     SevenSegDecrease_Q5();
;PCODE: $00000012 VOL: 0
; 0000 0017 
; 0000 0018 while (1)
;PCODE: $00000013 VOL: 0
; 0000 0019     {
; 0000 001A          SwitchToLed_Q3();
;PCODE: $00000014 VOL: 0
; 0000 001B          SevenSegZeroButton_Q6();
;PCODE: $00000015 VOL: 0
; 0000 001C     }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001D }
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;
;//-----------------------------------------------------------
;
;
;void Start(){
; 0000 0022 void Start(){
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0023     DDRA=0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0024     DDRB=0xff;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0025     DDRC=0xff;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0026     DDRD=0x0f;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0027 }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;void BlinkLED_Q1()
; 0000 0029 {
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 002A     int i=0;
; 0000 002B     for(i=0;i<4;i++){
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;	i -> R16,R17
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002C         PORTB=0xff;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002D         delay_ms(500);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002E         PORTB=0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 002F         delay_ms(500);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 0030     }
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0031 }
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;void LedLightDance_Q2()
; 0000 0033 {
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0034 
; 0000 0035     int i=0;
; 0000 0036     int DelayTime=75;
; 0000 0037     for(i=0;i<5;i++){
;PCODE: $00000048 VOL: 0
;	i -> R16,R17
;	DelayTime -> R18,R19
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0038         PORTB=0b10000000;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0039         delay_ms(DelayTime);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 003A         PORTB=0b01000000;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 003B         delay_ms(DelayTime);
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003C         PORTB=0b00100000;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003D         delay_ms(DelayTime);
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003E         PORTB=0b00010000;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 003F         delay_ms(DelayTime);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0040         PORTB=0b00001000;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0041         delay_ms(DelayTime);
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0042         PORTB=0b00000100;
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0043         delay_ms(DelayTime);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0044         PORTB=0b00000010;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0045         delay_ms(DelayTime);
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0046         PORTB=0b00000001;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0047         delay_ms(DelayTime);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0048     }
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0049 }
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;
;void SwitchToLed_Q3()
; 0000 004C {
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 004D     PORTB=PINA;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 004E }
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;
;void UpDownCount_Q4()
; 0000 0051 {
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0052     int DelayTime=700;
; 0000 0053     PORTD=0xf0;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;	DelayTime -> R16,R17
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0054       PORTC=0b01101111;
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0055       delay_ms(DelayTime);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 0056       PORTC= 0b01111111;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0057       delay_ms(DelayTime);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0058       PORTC= 0b00000111;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0059       delay_ms(DelayTime);
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 005A       PORTC=  0b01111101;
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 005B       delay_ms(DelayTime);
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 005C       PORTC=  0b01101101;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 005D       delay_ms(DelayTime);
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 005E       PORTC=   0b01100110;
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 005F       delay_ms(DelayTime);
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0060       PORTC=   0b01001111;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0000 0061       delay_ms(DelayTime);
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
; 0000 0062       PORTC=    0b01011011;
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 0063       delay_ms(DelayTime);
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 0064       PORTC=    0b00000110;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0065       delay_ms(DelayTime);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0066       PORTC=   0b00111111;
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
; 0000 0067       delay_ms(DelayTime);
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
; 0000 0068 
; 0000 0069 }
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;
;
;
;
;void SevenSegDecrease_Q5()
; 0000 006F {
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0070     unsigned char i=0;
; 0000 0071 
; 0000 0072     int DelayTime=25;
; 0000 0073     // stage1:   find unit decimal hundreds
; 0000 0074     char number=PINA;
; 0000 0075     char unit=0x00;
; 0000 0076     char decimal=0x00;
; 0000 0077     char hundreds=0x00;
; 0000 0078     char Hold=number;
; 0000 0079 
; 0000 007A     char NewNumber=number;
; 0000 007B     char point=0x00;
; 0000 007C 
; 0000 007D     while(Hold>=100){
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;	i -> R17
;	DelayTime -> R18,R19
;	number -> R16
;	unit -> R21
;	decimal -> R20
;	hundreds -> Y+9
;	Hold -> Y+8
;	NewNumber -> Y+7
;	point -> Y+6
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 007E         hundreds++;
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 007F         Hold-=100;
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0080     }
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0081     while(Hold>=10)
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0082     {
; 0000 0083         decimal+=1;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0084         Hold-=10;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 0085     }
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
; 0000 0086     unit=Hold;
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
; 0000 0087 
; 0000 0088      for(i=0;i<10;i++)
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 0089     {
; 0000 008A            PORTD=0b00000111;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 008B             SevenSegShowNumber(point,0);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 008C             delay_ms(DelayTime);
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
; 0000 008D 
; 0000 008E             PORTD=0b00001011;
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
; 0000 008F             SevenSegShowNumber(unit,1);
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0090             delay_ms(DelayTime);
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
; 0000 0091 
; 0000 0092             PORTD=0b00001101;
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 0093               SevenSegShowNumber(decimal,0);
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
; 0000 0094             delay_ms(DelayTime);
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
; 0000 0095 
; 0000 0096             PORTD=0b00001110;
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
; 0000 0097              SevenSegShowNumber(hundreds,0);
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0098             delay_ms(DelayTime);;
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
; 0000 0099 
; 0000 009A     }
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 009B 
; 0000 009C     while(NewNumber!=0||point!=0)
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
; 0000 009D     {
; 0000 009E         if(point==0){
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 009F             point=8;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00A0            number-=1;
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 00A1         }
; 0000 00A2         else{
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
; 0000 00A3             point-=2;
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 00A4         }
;PCODE: $00000130 VOL: 0
; 0000 00A5         NewNumber=number;
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 00A6 
; 0000 00A7 
; 0000 00A8 
; 0000 00A9         Hold=NewNumber;
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
; 0000 00AA          unit=0x00;
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
; 0000 00AB          decimal=0x00;
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 00AC          hundreds=0x00;
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
; 0000 00AD         while(Hold>=100){
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
; 0000 00AE             hundreds++;
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 00AF             Hold-=100;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00B0         }
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00B1         while(Hold>=10)
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 00B2         {
; 0000 00B3             decimal+=1;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
; 0000 00B4             Hold-=10;
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00B5         }
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
; 0000 00B6         unit=Hold;
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
; 0000 00B7 
; 0000 00B8 
; 0000 00B9 
; 0000 00BA          for(i=0;i<2;i++)
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00BB         {
; 0000 00BC             PORTD=0b00000111;
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
; 0000 00BD             SevenSegShowNumber(point,0);
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
; 0000 00BE             delay_ms(DelayTime);
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 00BF 
; 0000 00C0             PORTD=0b00001011;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00C1             SevenSegShowNumber(unit,1);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
; 0000 00C2             delay_ms(DelayTime);
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
; 0000 00C3 
; 0000 00C4             PORTD=0b00001101;
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 00C5               SevenSegShowNumber(decimal,0);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
; 0000 00C6             delay_ms(DelayTime);
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 00C7 
; 0000 00C8             PORTD=0b00001110;
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00C9              SevenSegShowNumber(hundreds,0);
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
; 0000 00CA             delay_ms(DelayTime);
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
; 0000 00CB 
; 0000 00CC         }
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
; 0000 00CD 
; 0000 00CE 
; 0000 00CF     }
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
; 0000 00D0 
; 0000 00D1 
; 0000 00D2 
; 0000 00D3 
; 0000 00D4 }
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;
;
;void SevenSegShowNumber(char SegmentNumber,int dot)
; 0000 00D8 {
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00D9 
; 0000 00DA     int b= SegmentNumber;
; 0000 00DB     if (b==0)
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;	SegmentNumber -> Y+4
;	dot -> Y+2
;	b -> R16,R17
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00DC     {
; 0000 00DD         PORTC=0b00111111;
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
; 0000 00DE     }
; 0000 00DF     else if(b==1)
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
; 0000 00E0     {
; 0000 00E1         PORTC=    0b00000110;
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
; 0000 00E2     }
; 0000 00E3     else if(b==2)
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
; 0000 00E4     {
; 0000 00E5        PORTC=    0b01011011;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00E6     }
; 0000 00E7     else if(b==3)
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
; 0000 00E8     {
; 0000 00E9         PORTC=   0b01001111;
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 00EA     }
; 0000 00EB     else if(b==4){
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00EC         PORTC=   0b01100110;}
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
; 0000 00ED     else if(b==5){
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
; 0000 00EE          PORTC=  0b01101101;}
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00EF     else if(b==6){
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 00F0         PORTC=  0b01111101;}
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
; 0000 00F1     else if(b==7){
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
;PCODE: $000001C4 VOL: 0
; 0000 00F2         PORTC= 0b00000111;}
;PCODE: $000001C5 VOL: 0
;PCODE: $000001C6 VOL: 0
; 0000 00F3     else if(b==8){
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00F4          PORTC= 0b01111111;}
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 00F5     else
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
; 0000 00F6      {
; 0000 00F7       PORTC=0b01101111;
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00F8      }
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00F9     if (dot==1){
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00FA         PORTC.7=1;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 00FB     }
; 0000 00FC 
; 0000 00FD }
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;
;
;void SevenSegZeroButton_Q6()
; 0000 0101 {
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0102     unsigned char i=0;
; 0000 0103 
; 0000 0104     int DelayTime=25;
; 0000 0105     char number=PINA;
; 0000 0106     char unit=0x00;
; 0000 0107     char decimal=0x00;
; 0000 0108     char hundreds=0x00;
; 0000 0109     char Hold=number;
; 0000 010A     char point=0x00;
; 0000 010B 
; 0000 010C     while(Hold>=100){
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;	i -> R17
;	DelayTime -> R18,R19
;	number -> R16
;	unit -> R21
;	decimal -> R20
;	hundreds -> Y+8
;	Hold -> Y+7
;	point -> Y+6
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 010D         hundreds++;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
; 0000 010E         Hold-=100;
;PCODE: $00000205 VOL: 0
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 010F     }
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 0110     while(Hold>=10)
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0111     {
; 0000 0112         decimal+=1;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0113         Hold-=10;
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
; 0000 0114     }
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
; 0000 0115     unit=Hold;
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 0116 
; 0000 0117 
; 0000 0118 
; 0000 0119 
; 0000 011A 
; 0000 011B      for(i=0;i<3;i++)
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 011C     {
; 0000 011D            PORTD=0b00000111;
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
; 0000 011E             SevenSegShowNumber(point,0);
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 011F             delay_ms(DelayTime);
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
; 0000 0120 
; 0000 0121             PORTD=0b00001011;
;PCODE: $00000229 VOL: 0
;PCODE: $0000022A VOL: 0
; 0000 0122             if(PIND.5==0)
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
; 0000 0123                 SevenSegShowNumber(0,1);
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
; 0000 0124             else
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0125                 SevenSegShowNumber(unit,1);
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
; 0000 0126             delay_ms(DelayTime);
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 0127 
; 0000 0128             PORTD=0b00001101;
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
; 0000 0129             if(PIND.6==0)
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 0
; 0000 012A                 SevenSegShowNumber(0,1);
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 012B             else
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 012C                 SevenSegShowNumber(decimal,1);
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 012D             delay_ms(DelayTime);
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
; 0000 012E 
; 0000 012F             PORTD=0b00001110;
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 0130             if(PIND.7==0)
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
; 0000 0131                 SevenSegShowNumber(0,1);
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
; 0000 0132             else
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0133                 SevenSegShowNumber(hundreds,1);;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
; 0000 0134             delay_ms(DelayTime);
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0135 
; 0000 0136     }
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
; 0000 0137 
; 0000 0138 
; 0000 0139 
; 0000 013A 
; 0000 013B 
; 0000 013C 
; 0000 013D }
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;
;
