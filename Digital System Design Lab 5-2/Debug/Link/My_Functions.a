;//q1 Student name and ID in 2 lines
;//q2 "Welcome to the Microprocessor lab classes in Isfahan University of Technology"
;#include <HeaderFiles.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;/*
;
;pwm Duty.C:  10     30    50     70    90
;Speed(rpm) :
;Ocr       :  1A     4D   80     B2    E5
;
;*/
;void Q2_Function(int DutyCycle){
; 0001 000D void Q2_Function(int DutyCycle){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0001 000E     if(DutyCycle==10){OCR0=0x1A;}
;PCODE: $0000000F VOL: 0
;	DutyCycle -> Y+0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0001 000F     else if(DutyCycle==30){OCR0=0x4D;}
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0001 0010     else if(DutyCycle==50){OCR0=0x80;}
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0001 0011     else if(DutyCycle==70){OCR0=0xB2;}
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0001 0012     else if(DutyCycle==90){OCR0=0xE5;}
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0001 0013     else{OCR0=0x00;}
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0001 0014 
; 0001 0015 }
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;
;void Q4_Function(){
; 0001 0017 void Q4_Function(){
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0001 0018 
; 0001 0019       int ocrValue=255;
; 0001 001A       ocrValue=PINA;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;	ocrValue -> R16,R17
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0001 001B       OCR0=ocrValue;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0001 001C 
; 0001 001D 
; 0001 001E }
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;
;void Q5_function_TwoPhase()
; 0001 0021 {
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0001 0022 
; 0001 0023         delay_ms(1000);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0001 0024         PORTB=0x30;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0001 0025         delay_ms(1000);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0001 0026         PORTB=0x60;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0001 0027         delay_ms(1000);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0001 0028         PORTB=0xc0;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0001 0029         delay_ms(1000);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0001 002A         PORTB=0x90;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0001 002B 
; 0001 002C 
; 0001 002D 
; 0001 002E }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;
;void TurnOFF_AllTimers(){
; 0001 0030 void TurnOFF_AllTimers(){
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0001 0031 
; 0001 0032     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0001 0033 
; 0001 0034     TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0001 0035     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (0<<CS10);
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0001 0036 
; 0001 0037 
; 0001 0038     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0001 0039 
; 0001 003A 
; 0001 003B }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;void turnOn_SelectedTimer(int SelectTimer)
; 0001 003D {
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0001 003E 
; 0001 003F 
; 0001 0040     if(SelectTimer==0){
;PCODE: $0000006D VOL: 0
;	SelectTimer -> Y+0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0001 0041      TCCR0=(1<<WGM00) | (1<<COM01) | (0<<COM00) | (1<<WGM01) | (0<<CS02) | (1<<CS01) | (0<<CS00);
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0001 0042     }
; 0001 0043     else if(SelectTimer==1){
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0001 0044 
; 0001 0045            // TCCR1B =  (0<<CS12)| (1<<CS11)| (0<<CS10);  //1Mhz  -> Period = 1.024 ms
; 0001 0046 
; 0001 0047     }
; 0001 0048     else if(SelectTimer==2){
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0001 0049          TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (1<<CS21) | (0<<CS20);
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0001 004A     }
; 0001 004B }
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;void Q6_Speedmeter(){
; 0001 004C void Q6_Speedmeter(){
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0001 004D       int dataL,dataH;
; 0001 004E       char Speed_display[10]="00";
; 0001 004F       if(control==1)
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;	dataL -> R16,R17
;	dataH -> R18,R19
;	Speed_display -> Y+4
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0001 0050       {
; 0001 0051           control=0;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0001 0052           dataL=ICR1L;
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0001 0053           dataH=ICR1H;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0001 0054           ICR_Data=(dataH<<8 |dataL)>>2;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0001 0055       }
; 0001 0056       else
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0001 0057       {
; 0001 0058           dataL=ICR1L;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0001 0059           dataH=ICR1H;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0001 005A           ICR_Hold=ICR_Data;
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
; 0001 005B           ICR_Data=(dataH<<8 |dataL)>>2;
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
; 0001 005C           Spacetime_Hold=Spacetime;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0001 005D           Spacetime=ICR_Data-ICR_Hold;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0001 005E       }
;PCODE: $000000B2 VOL: 0
; 0001 005F       if((((Spacetime_Hold-Spacetime)>20)|| ((Spacetime_Hold-Spacetime)<-20))&&
; 0001 0060       (((Spacetime_Hold-Spacetime)>-1000)|| ((Spacetime_Hold-Spacetime)<1000))&&(Spacetime>0))
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
; 0001 0061       {
; 0001 0062           sprintf(Speed_display,"%d",2000*150/Spacetime);
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0001 0063           lcd_clear();
;PCODE: $000000DD VOL: 0
; 0001 0064           lcd_puts(Speed_display);
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0001 0065       }
; 0001 0066 
; 0001 0067 
; 0001 0068 }
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
